Build Instructions
==================

Building Spiel requires [SBT](http://code.google.com/p/simple-build-tool/). Simply [download the latest release](http://code.google.com/p/simple-build-tool/downloads/list) and set it up as per [these instructions](http://code.google.com/p/simple-build-tool/wiki/Setup).

Once SBT is successfully installed, you can work with the code in a number of ways. SBT can either be used as a normal command line tool by invoking it like so ("$ " indicates an OS shell):

$ sbt compile

You can run SBT without command line arguments and are then dropped into an SBT shell which supports all the commands directly, without needing a prefix. You can also precede any SBT commands with a "~" to rerun the specified action when any changes are made to the source. For instance, Running the following ("> " indicates an SBT shell):

> ~compile

will automatically and incrementally recompile the app upon source changes. With the basics of SBT introduced, here is how to build the app:

$ sbt update

This compiles the build system and retrieves all necessary plugins and dependencies. Next, to build the app, run:

$ sbt package-debug

This leaves a spiel*.apk file in a subdirectory of target/ based on the Scala version against which Spiel has been built.

Development Tips
----------------

SBT and [Scala](http://scala-lang.org) allow for a streamlined Android app development process. Here is how I rapidly develop Spiel. First, launch SBT to use its shell directly:

$ sbt

Next, run the emulator in the background. You should configure the image to run Spiel, this process can't do that for you.

Once started, run the following from the SBT shell:

> ~reinstall-emulator

When changes are made in the source directory (src/main/scala or src/main/java) the app will be rebuilt and restarted.

Contributions
-------------

Please send contributions as patches formatted via:

$ git format-patch origin/master

to me at nolan@thewordnerd.info.

If you wish to contribute to Spiel on a more long-term basis, then I may make you a committer. Sign up for an account at the [Spiel website](http://spielproject.info) and, after sending me a few good patches, let me know that you're interested. Once I have an SSH public key, I can grant you commit access to the main repository.
